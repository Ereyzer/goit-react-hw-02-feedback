{"version":3,"sources":["components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","props","leaveFeedback","this","map","option","className","style","Button","type","onClick","Component","Statistics","arrKeys","Object","keys","key","console","log","apply","React","Container","children","Section","title","Notification","message","defaultProps","App","openStatistic","state","good","neutral","bad","changeState","setState","prevState","totalCount","percentageCount","Math","round","total","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kKCGjBC,EAAb,4MACEC,QAAU,EAAKC,MAAMD,QADvB,EAEEE,cAAgB,EAAKD,MAAMC,cAF7B,4CAIE,WAAU,IAAD,OACP,OACE,mCACGC,KAAKH,QAAQI,KAAI,SAAAC,GAChB,OACE,wBACEC,UAAWC,IAAMC,OAEjBC,KAAK,SACLC,QAAS,kBAAM,EAAKR,cAAcG,IAJpC,SAMGA,GAJIA,YAXnB,GAAqCM,aCDxBC,EAAb,4JAQE,WAAU,IAAD,OACDC,EAAUC,OAAOC,KAAKZ,KAAKF,OACjC,OACE,6BACGY,EAAQT,KAAI,SAAAY,GAEX,OADAC,QAAQC,IAAIC,MAAM,EAAKlB,MAAMe,IAE3B,6BACE,8BACGA,EADH,IACS,IACP,iCACG,EAAKf,MAAMe,GACH,uBAARA,GAAgC,WAL9BA,YAfrB,GAAgCI,IAAMT,W,iBCIvBU,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKhB,UAAWC,IAAK,UAArB,SAAqCe,KCA1BC,EAAb,4JAKE,WACE,MAA4BpB,KAAKF,MAAzBuB,EAAR,EAAQA,MAAOF,EAAf,EAAeA,SACf,OACE,kCACE,eAAC,EAAD,WACE,6BAAKE,IACJF,WAXX,GAA6BF,IAAMT,WCDtBc,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KACjDD,EAAaE,aAAe,CAC1BD,QAAS,wBCCJ,IAAME,EAAb,4MACEC,eAAgB,EADlB,EAGEC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,GANT,EASEC,YAAc,SAAA7B,GACZ,EAAKwB,eAAgB,EACrB,EAAKM,UAAS,SAAAC,GACZ,OAAO,eAAG/B,EAAS+B,EAAU/B,GAAU,OAZ7C,EAgBEgC,WAAa,qBAAGN,KAAH,EAASC,QAAT,EAAkBC,KAhBjC,EAkBEK,gBAAkB,gBAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OAChBM,KAAKC,MAAO,KAAOT,EAAOC,EAAUC,GAAQF,IAnBhD,4CAsBE,WACE,IAAQD,EAAU3B,KAAV2B,MACAC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,IACvB,OACE,qCACE,cAAC,EAAD,CAAST,MAAM,wBAAf,SACE,cAAC,EAAD,CACExB,QAAS,CAAC,OAAQ,UAAW,OAC7BE,cAAeC,KAAK+B,gBAGxB,cAAC,EAAD,CAASV,MAAM,aAAf,SACGrB,KAAK0B,cACJ,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLQ,MAAOtC,KAAKkC,WAAWP,GACvBY,mBAAoBvC,KAAKmC,gBAAgBR,KAG3C,cAAC,EAAD,CAAcJ,QAAQ,+BA3ClC,GAAyBf,aCDzBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BlD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.29db31a6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__JBy1_\"};","import React, { Component } from 'react';\nimport style from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport class FeedbackOptions extends Component {\n  options = this.props.options;\n  leaveFeedback = this.props.leaveFeedback;\n\n  render() {\n    return (\n      <>\n        {this.options.map(option => {\n          return (\n            <button\n              className={style.Button}\n              key={option}\n              type=\"button\"\n              onClick={() => this.leaveFeedback(option)}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </>\n    );\n  }\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Statistics extends React.Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n  };\n  render() {\n    const arrKeys = Object.keys(this.props);\n    return (\n      <ul>\n        {arrKeys.map(key => {\n          console.log.apply(this.props[key]);\n          return (\n            <li key={key}>\n              <p>\n                {key}:{' '}\n                <span>\n                  {this.props[key]}\n                  {key === 'positivePercentage' && '%'}\n                </span>\n              </p>\n            </li>\n          );\n        })}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={style['container']}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container';\nimport PropTypes from 'prop-types';\n\nexport class Section extends React.Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n  };\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <Container>\n          <h2>{title}</h2>\n          {children}\n        </Container>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => <p>{message}</p>;\nNotification.defaultProps = {\n  message: 'have not any message',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\n\nexport class App extends Component {\n  openStatistic = false;\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeState = option => {\n    this.openStatistic = true;\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  totalCount = ({ good, neutral, bad }) => good + neutral + bad;\n\n  percentageCount = ({ good, neutral, bad }) =>\n    Math.round((100 / (good + neutral + bad)) * good);\n  //  Math.round((good * 100 + neutral * 50 + bad * 0) / (good + neutral + bad));\n\n  render() {\n    const { state } = this;\n    const { good, neutral, bad } = state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            leaveFeedback={this.changeState}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.openStatistic ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.totalCount(state)}\n              positivePercentage={this.percentageCount(state)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"FeedbackOptions_Button__11OeW\"};"],"sourceRoot":""}