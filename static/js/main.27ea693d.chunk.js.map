{"version":3,"sources":["components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistic/Statistic.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","FeedbackOptions","options","leaveFeedback","map","option","className","style","Button","type","onClick","Statistic","item","text","defaultProps","Statistics","arrKeys","Object","keys","this","props","key","console","log","apply","React","Component","Container","children","Section","title","Notification","message","App","openStatistic","state","good","neutral","bad","changeState","setState","prevState","totalCount","percentageCount","Math","round","total","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,UAAY,+B,kKCGvB,SAASC,EAAT,GAAsD,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,cACzC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GACX,OACE,wBACEC,UAAWC,IAAMC,OAEjBC,KAAK,SACLC,QAAS,kBAAMP,EAAcE,IAJ/B,SAMGA,GAJIA,QCRV,SAASM,EAAT,GAAoC,IAAfC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,KAChC,OACE,6BACE,8BACGA,EADH,IACU,IACR,iCACGD,EACS,uBAATC,GAAiC,YAO5CF,EAAUG,aAAe,CACvBF,KAAM,GCdD,IAAMG,EAAb,4JAQE,WAAU,IAAD,OACDC,EAAUC,OAAOC,KAAKC,KAAKC,OACjC,OACE,6BACGJ,EAAQZ,KAAI,SAAAiB,GAEX,OADAC,QAAQC,IAAIC,MAAM,EAAKJ,MAAMC,IACtB,cAACV,EAAD,CAAqBE,KAAMQ,EAAKT,KAAM,EAAKQ,MAAMC,IAAjCA,YAdjC,GAAgCI,IAAMC,W,iBCOvBC,EAPG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKtB,UAAWC,IAAK,UAArB,SAAqCqB,KCD1BC,EAAb,4JAKE,WACE,MAA4BV,KAAKC,MAAzBU,EAAR,EAAQA,MAAOF,EAAf,EAAeA,SACf,OACE,kCACE,eAAC,EAAD,WACE,6BAAKE,IACJF,WAXX,GAA6BH,IAAMC,WCDtBK,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAAiB,4BAAIA,KACjDD,EAAajB,aAAe,CAC1BkB,QAAS,wBCCJ,IAAMC,EAAb,4MACEC,eAAgB,EADlB,EASEC,MAAQ,CACNC,KAAM,EAAKhB,MAAMgB,KACjBC,QAAS,EAAKjB,MAAMiB,QACpBC,IAAK,EAAKlB,MAAMkB,KAZpB,EAeEC,YAAc,SAAAlC,GACZ,EAAK6B,eAAgB,EACrB,EAAKM,UAAS,SAAAC,GACZ,OAAO,eAAGpC,EAASoC,EAAUpC,GAAU,OAlB7C,EAsBEqC,WAAa,qBAAGN,KAAH,EAASC,QAAT,EAAkBC,KAtBjC,EAwBEK,gBAAkB,gBAAGP,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OAChBM,KAAKC,MAAO,KAAOT,EAAOC,EAAUC,GAAQF,IAzBhD,4CA4BE,WACE,IAAQD,EAAUhB,KAAVgB,MACAC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,IACvB,OACE,qCACE,cAAC,EAAD,CAASR,MAAM,wBAAf,SACE,cAAC7B,EAAD,CACEC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,cAAegB,KAAKoB,gBAGxB,cAAC,EAAD,CAAST,MAAM,aAAf,SACGX,KAAKe,cACJ,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLQ,MAAO3B,KAAKuB,WAAWP,GACvBY,mBAAoB5B,KAAKwB,gBAAgBR,KAG3C,cAAC,EAAD,CAAcH,QAAQ,+BAjDlC,GAAyBN,aAAZO,EAGJnB,aAAe,CACpBsB,KAAM,EACNC,QAAS,EACTC,IAAK,GCPTU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BrD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.27ea693d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__JBy1_\"};","import React from 'react';\nimport style from './FeedbackOptions.module.css';\nimport PropTypes from 'prop-types';\n\nexport function FeedbackOptions({ options, leaveFeedback }) {\n  return (\n    <>\n      {options.map(option => {\n        return (\n          <button\n            className={style.Button}\n            key={option}\n            type=\"button\"\n            onClick={() => leaveFeedback(option)}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function Statistic({ item, text }) {\n  return (\n    <li>\n      <p>\n        {text}:{' '}\n        <span>\n          {item}\n          {text === 'positivePercentage' && '%'}\n        </span>\n      </p>\n    </li>\n  );\n}\n\nStatistic.defaultProps = {\n  item: 0,\n};\nStatistic.propTypes = {\n  text: PropTypes.string.isRequired,\n  item: PropTypes.number,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Statistic } from '../Statistic/Statistic';\n\nexport class Statistics extends React.Component {\n  static propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positivePercentage: PropTypes.number.isRequired,\n  };\n  render() {\n    const arrKeys = Object.keys(this.props);\n    return (\n      <ul>\n        {arrKeys.map(key => {\n          console.log.apply(this.props[key]);\n          return <Statistic key={key} text={key} item={this.props[key]} />;\n        })}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport style from './Container.module.css';\nimport PropTypes from 'prop-types';\n\nconst Container = ({ children }) => (\n  <div className={style['container']}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\nexport default Container;\n","import React from 'react';\nimport Container from '../Container';\nimport PropTypes from 'prop-types';\n\nexport class Section extends React.Component {\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.element.isRequired,\n  };\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <Container>\n          <h2>{title}</h2>\n          {children}\n        </Container>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Notification = ({ message }) => <p>{message}</p>;\nNotification.defaultProps = {\n  message: 'have not any message',\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n","import React, { Component } from 'react';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\n\nexport class App extends Component {\n  openStatistic = false;\n\n  static defaultProps = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  state = {\n    good: this.props.good,\n    neutral: this.props.neutral,\n    bad: this.props.bad,\n  };\n\n  changeState = option => {\n    this.openStatistic = true;\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  };\n\n  totalCount = ({ good, neutral, bad }) => good + neutral + bad;\n\n  percentageCount = ({ good, neutral, bad }) =>\n    Math.round((100 / (good + neutral + bad)) * good);\n  //  Math.round((good * 100 + neutral * 50 + bad * 0) / (good + neutral + bad));\n\n  render() {\n    const { state } = this;\n    const { good, neutral, bad } = state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            leaveFeedback={this.changeState}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.openStatistic ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.totalCount(state)}\n              positivePercentage={this.percentageCount(state)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"FeedbackOptions_Button__11OeW\"};"],"sourceRoot":""}