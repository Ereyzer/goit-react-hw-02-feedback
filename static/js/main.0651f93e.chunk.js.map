{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Container/Container.js","components/Section/Section.js","components/Notification/Notification.js","components/App/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","props","leaveFeedback","this","map","option","className","style","Button","type","onClick","Component","Statistics","console","log","Object","keys","arrKeys","key","React","Container","children","Section","title","Notification","message","App","changeState","bind","openStatistic","state","good","neutral","bad","totalCount","percentageCount","Math","round","setState","prevState","total","positivePercentage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,OAAS,kC,mBCA3BD,EAAOC,QAAU,CAAC,UAAY,+B,0KCEjBC,EAAb,4MACEC,QAAU,EAAKC,MAAMD,QADvB,EAEEE,cAAgB,EAAKD,MAAMC,cAF7B,4CAGE,WAAU,IAAD,OACP,OACE,mCACGC,KAAKH,QAAQI,KAAI,SAAAC,GAChB,OACE,wBACEC,UAAWC,IAAMC,OAEjBC,KAAK,SACLC,QAAS,kBAAM,EAAKR,cAAcG,IAJpC,SAMGA,GAJIA,YAVnB,GAAqCM,aCDxBC,EAAb,4JACE,WAAU,IAAD,OACPC,QAAQC,IAAIC,OAAOC,KAAKb,KAAKF,QAC7B,IAAMgB,EAAUF,OAAOC,KAAKb,KAAKF,OAEjC,OACE,6BACGgB,EAAQb,KAAI,SAAAc,GAAG,OACd,6BACE,8BACGA,EADH,IACS,IACP,iCACG,EAAKjB,MAAMiB,GACH,uBAARA,GAAgC,WAL9BA,YARnB,GAAgCC,IAAMR,W,iBCKvBS,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,qBAAKf,UAAWC,IAAK,UAArB,SAAqCc,KCF1BC,EAAb,4JACE,WACE,MAA4BnB,KAAKF,MAAzBsB,EAAR,EAAQA,MAAOF,EAAf,EAAeA,SACf,OACE,kCACE,eAAC,EAAD,WACE,6BAAKE,IACJF,WAPX,GAA6BF,IAAMR,WCAtBa,EAAb,4JACE,WACE,OAAO,4BAAIrB,KAAKF,MAAMwB,cAF1B,GAAkCN,IAAMR,WCI3Be,EAAb,4MACExB,cAAgB,EAAKyB,YAAYC,KAAjB,gBADlB,EAEEC,eAAgB,EAFlB,EAIEC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,GAPT,EAkBEC,WAAa,qBAAGH,KAAH,EAASC,QAAT,EAAkBC,KAlBjC,EAoBEE,gBAAkB,gBAAGJ,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAlB,OAChBG,KAAKC,MAAO,KAAON,EAAOC,EAAUC,GAAQF,IArBhD,iDAUE,SAAY1B,GAEVF,KAAK0B,eAAgB,EACrB1B,KAAKmC,UAAS,SAAAC,GACZ,OAAO,eAAGlC,EAASkC,EAAUlC,GAAU,QAd7C,oBAwBE,WACE,IAAQyB,EAAU3B,KAAV2B,MACAC,EAAuBD,EAAvBC,KAAMC,EAAiBF,EAAjBE,QAASC,EAAQH,EAARG,IACvB,OACE,qCACE,cAAC,EAAD,CAASV,MAAM,wBAAf,SACE,cAAC,EAAD,CACEvB,QAAS,CAAC,OAAQ,UAAW,OAC7BE,cAAeC,KAAKD,kBAGxB,cAAC,EAAD,CAASqB,MAAM,aAAf,SACGpB,KAAK0B,cACJ,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLO,MAAOrC,KAAK+B,WAAWJ,GACvBW,mBAAoBtC,KAAKgC,gBAAgBL,KAG3C,cAAC,EAAD,CAAcL,QAAQ,+BA7ClC,GAAyBd,aCDzB+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0651f93e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"FeedbackOptions_Button__11OeW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__JBy1_\"};","import React, { Component } from 'react';\nimport style from './FeedbackOptions.module.css';\n\nexport class FeedbackOptions extends Component {\n  options = this.props.options;\n  leaveFeedback = this.props.leaveFeedback;\n  render() {\n    return (\n      <>\n        {this.options.map(option => {\n          return (\n            <button\n              className={style.Button}\n              key={option}\n              type=\"button\"\n              onClick={() => this.leaveFeedback(option)}\n            >\n              {option}\n            </button>\n          );\n        })}\n      </>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Statistics extends React.Component {\n  render() {\n    console.log(Object.keys(this.props));\n    const arrKeys = Object.keys(this.props);\n\n    return (\n      <ul>\n        {arrKeys.map(key => (\n          <li key={key}>\n            <p>\n              {key}:{' '}\n              <span>\n                {this.props[key]}\n                {key === 'positivePercentage' && '%'}\n              </span>\n            </p>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport style from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={style['container']}>{children}</div>\n);\n\nexport default Container;\n","import React from 'react';\nimport Container from '../Container';\nexport class Section extends React.Component {\n  render() {\n    const { title, children } = this.props;\n    return (\n      <section>\n        <Container>\n          <h2>{title}</h2>\n          {children}\n        </Container>\n      </section>\n    );\n  }\n}\n","import React from 'react';\n\nexport class Notification extends React.Component {\n  render() {\n    return <p>{this.props.message}</p>;\n  }\n}\n","import React, { Component } from 'react';\nimport { FeedbackOptions } from '../FeedbackOptions/FeedbackOptions';\nimport { Statistics } from '../Statistics/Statistics';\nimport { Section } from '../Section/Section';\nimport { Notification } from '../Notification/Notification';\n\nexport class App extends Component {\n  leaveFeedback = this.changeState.bind(this);\n  openStatistic = false;\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  changeState(option) {\n    // console.log(this)\n    this.openStatistic = true;\n    this.setState(prevState => {\n      return { [option]: prevState[option] + 1 };\n    });\n  }\n\n  totalCount = ({ good, neutral, bad }) => good + neutral + bad;\n\n  percentageCount = ({ good, neutral, bad }) =>\n    Math.round((100 / (good + neutral + bad)) * good);\n  //  Math.round((good * 100 + neutral * 50 + bad * 0) / (good + neutral + bad));\n\n  render() {\n    const { state } = this;\n    const { good, neutral, bad } = state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={['good', 'neutral', 'bad']}\n            leaveFeedback={this.leaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.openStatistic ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.totalCount(state)}\n              positivePercentage={this.percentageCount(state)}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}